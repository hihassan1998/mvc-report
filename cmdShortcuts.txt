#1 Run your app
You can open the PHP built-in web server to verify the installation.
# You are in the app/ directory
php -S localhost:8888 -t public



#2 Publish the application to the student server.
dbwebb publishpure me


#3 CHECK route exists/ Symfony bin/console
# Show the routes
bin/console debug:router

# Match a specific route
bin/console router:match /lucky/number

# Clear the cache
bin/console cache:clear

# Show available commands
bin/console

#4 Build and run after installing encore 
install composer (if not installed)
npm install
npm run build

#5 After symphony cli isntalled:
symfony server:start

#6 git commits

git tag

git tag -a v v10.0.0 -m "Final release with all reports"
git tag -a v5.0.0 -m"First release kmom05 Library CRUD App"

git push  --tags    OR   git push origin --tags

#7 Php linting run composer script
composer csfix:dry
composer csfix

#8 Install in \tools -dir
mkdir --parents tools/phpmd
composer require --dev --working-dir=tools/phpmd phpmd/phpmd
-- verify -- 
tools/phpmd/vendor/bin/phpmd --version
tools/phpmd/vendor/bin/phpmd --help
-- exe ---
tools/phpmd/vendor/bin/phpmd src text cleancode,codesize,controversial,design,naming,unusedcode
--add config file in tools/phpomd
--exe--
tools/phpmd/vendor/bin/phpmd . text tools/phpmd/phpmd.xml

#9 nstall php stan for before production liniting
mkdir --parents tools/phpstan
composer require --dev --working-dir=tools/phpstan phpstan/phpstan
--verify-- 
tools/phpstan/vendor/bin/phpstan --version
tools/phpstan/vendor/bin/phpstan --help
--exe--
tools/phpstan/vendor/bin/phpstan analyse src

#RUn PHP linting
composer phpmd
composer phpstan
composer lint

#Run php docs and php unit testing
composer phpdoc
composer phpunit


## Create db:
php bin/console doctrine:database:create
 then :
php bin/console make:entity
 then migrate:
php bin/console make:migration
 apply migartions:
php bin/console doctrine:migrations:migrate

!! Do not forget to create and run the migration, if and when you update the entity classes. !!

Run SQL toward the database
You can use the console to do pure SQL toward the database.

cehck data in db:
php bin/console dbal:run-sql 'SELECT * FROM book'


# Isntall metreic to dir:
- Go to the root of your Symfony directory
mkdir --parents tools/phpmetrics
composer require --working-dir=tools/phpmetrics phpmetrics/phpmetrics

## Metrics tool execution:

tools/phpmetrics/vendor/bin/phpmetrics --version
tools/phpmetrics/vendor/bin/phpmetrics --help

## list all metrics:
tools/phpmetrics/vendor/bin/phpmetrics --metrics

## Execute metrics tool:
tools/phpmetrics/vendor/bin/phpmetrics src

## html mtrics report generation:
tools/phpmetrics/vendor/bin/phpmetrics --report-html=docs/metrics src

## Metrics report throgh composer:
composer phpmetrics