#1 Run your app
You can open the PHP built-in web server to verify the installation.
# You are in the app/ directory
php -S localhost:8888 -t public



#2 Publish the application to the student server.
dbwebb publishpure me


#3 CHECK route exists/ Symfony bin/console
# Show the routes
bin/console debug:router

# Match a specific route
bin/console router:match /lucky/number

# Clear the cache
bin/console cache:clear

# Show available commands
bin/console

#4 Build and run after installing encore 
install composer (if not installed)
npm install
npm run build

#5 After symphony cli isntalled:
symfony server:start

#6 git commits

git tag

git tag -a v3.1.0 -m "Relase with complete game flow"
git tag -a v2.1.3 -m"Fourth release kmom02 Card-Game"

git push  --tags    OR   git push origin --tags

#7 Php linting run composer script
composer csfix:dry
composer csfix

#8 Install in \tools -dir
mkdir --parents tools/phpmd
composer require --dev --working-dir=tools/phpmd phpmd/phpmd
-- verify -- 
tools/phpmd/vendor/bin/phpmd --version
tools/phpmd/vendor/bin/phpmd --help
-- exe ---
tools/phpmd/vendor/bin/phpmd src text cleancode,codesize,controversial,design,naming,unusedcode
--add config file in tools/phpomd
--exe--
tools/phpmd/vendor/bin/phpmd . text tools/phpmd/phpmd.xml

#9 nstall php stan for before production liniting
mkdir --parents tools/phpstan
composer require --dev --working-dir=tools/phpstan phpstan/phpstan
--verify-- 
tools/phpstan/vendor/bin/phpstan --version
tools/phpstan/vendor/bin/phpstan --help
--exe--
tools/phpstan/vendor/bin/phpstan analyse src

#RUn PHP linting
composer phpmd
composer phpstan
composer lint